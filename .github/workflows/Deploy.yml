name: Build and Deploy
on:
  push:
    branches:
      - main
      - master

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    # NOTE: Python is necessary for the pre-rendering (minification) step
    - name: Install python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install Julia
      uses: julia-actions/setup-julia@v1
      with:
        version: "1"

    - name: Cache Julia artifacts & such
      uses: julia-actions/cache@v1
      with:
        cache-registries: "true"

    # We set up a folder that Pluto can use to cache exported notebooks. If the notebook file did not change, then Pluto can take the exported file from cache instead of running the notebook.
    - name: Set up notebook state cache
      uses: actions/cache@v3
      with:
          path: pluto_state_cache
          key: ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}-${{ hashFiles('**/*jl') }}
          restore-keys: |
              ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}

    - run: julia --project=. -e 'using Pkg; Pkg.instantiate();'

    - run: julia --project. -e '
            import PlutoSliderServer

            PlutoSliderServer.export_directory("talks";
              Export_cache_dir="pluto_state_cache",
              Export_baked_notebookfile=false,
              # Export_baked_state=false,
              Export_create_index=false,
            )'
    # NOTE
    #   The steps below ensure that NodeJS and Franklin are loaded then it
    #   installs highlight.js which is needed for the prerendering step
    #   (code highlighting + katex prerendering).
    #   Then the environment is activated and instantiated to install all
    #   Julia packages which may be required to successfully build your site.
    #   The last line should be `optimize()` though you may want to give it
    #   specific arguments, see the documentation or ?optimize in the REPL.
    - run: julia --project=. -e '
            using NodeJS; run(`$(npm_cmd()) install highlight.js`);
            using Franklin;
            optimize()'
    - name: Build and Deploy
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: __site
